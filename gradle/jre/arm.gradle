def downloadLocation = project.ext.downloadLocation

def jreFolder = project.ext.jreFolder

def jfxfilename = "javafx-sdk-17.0.2"

task downloadARMJRE(type: Download, group: 'custom jre') {
    src "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.3%2B7/OpenJDK17U-jre_arm_linux_hotspot_17.0.3_7.tar.gz"
    dest new File("${downloadLocation}/jre", 'arm.tar.gz')
    overwrite true
}

task extractARMJRE(dependsOn: downloadARMJRE, type: Copy, group: 'custom jre') {
    doLast {
        copy {
            from "${jreFolder}/arm/jdk-17.0.3+7-jre"
            into "${jreFolder}/arm"
        }

        delete "${jreFolder}/arm/jdk-17.0.3+7-jre"
    }

    from tarTree(downloadARMJRE.dest)
    into "${jreFolder}/arm"
}

task downloadOpenJFXForLibavPluginARM(type: Download, group: 'custom jre') {
    src "https://download2.gluonhq.com/openjfx/17.0.2/openjfx-17.0.2_linux-arm32_bin-sdk.zip"
    dest new File("${downloadLocation}/jre", 'armJFX.zip')
    overwrite true
}

task extractOpenJFXForLibavPluginARM(dependsOn: downloadOpenJFXForLibavPluginARM, type: Copy, group: 'custom jre') {
    from zipTree(downloadOpenJFXForLibavPluginARM.dest)
    into "${jreFolder}/arm"
}

task downloadAndExtractOpenJFXForLibavPluginARM(dependsOn: extractOpenJFXForLibavPluginARM, group: 'custom jre') {
    doLast {
        copy {
            from "${jreFolder}/arm/${jfxfilename}/lib/"
            into "${jreFolder}/arm/lib"
        }

        delete "${jreFolder}/arm/${jfxfilename}"
    }
}

task downloadAndExtractARMJRE(dependsOn: extractARMJRE, group: 'custom jre') {

}

task downloadAndExtractARMJREwithLibavPlugin(dependsOn: [downloadAndExtractARMJRE, downloadAndExtractOpenJFXForLibavPluginARM], group: 'custom jre') {
}
